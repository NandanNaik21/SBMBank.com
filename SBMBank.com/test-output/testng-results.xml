<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="62916" started-at="2020-03-08T07:03:03Z" finished-at="2020-03-08T07:04:06Z">
    <groups>
    </groups>
    <test name="ChromeTest" duration-ms="14824" started-at="2020-03-08T07:03:03Z" finished-at="2020-03-08T07:03:18Z">
      <class name="com.SBM.qa.TestCases.ValidLogin">
        <test-method status="PASS" signature="setExtent()[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@4f7d0008]" name="setExtent" is-config="true" duration-ms="312" started-at="2020-03-08T12:33:03Z" finished-at="2020-03-08T12:33:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method status="PASS" signature="launchbrowser(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@4f7d0008]" name="launchbrowser" is-config="true" duration-ms="8775" started-at="2020-03-08T12:33:03Z" finished-at="2020-03-08T12:33:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Instance01]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[IN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method status="PASS" signature="testValidLogin()[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@4f7d0008]" name="testValidLogin" duration-ms="3926" started-at="2020-03-08T12:33:12Z" finished-at="2020-03-08T12:33:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@4f7d0008]" name="tearDown" is-config="true" duration-ms="1776" started-at="2020-03-08T12:33:16Z" finished-at="2020-03-08T12:33:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidLogin.testValidLogin()[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.SBM.qa.TestCases.ValidLogin -->
    </test> <!-- ChromeTest -->
    <test name="IETest" duration-ms="48061" started-at="2020-03-08T07:03:18Z" finished-at="2020-03-08T07:04:06Z">
      <class name="com.SBM.qa.TestCases.ValidLogin">
        <test-method status="PASS" signature="launchbrowser(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@73846619]" name="launchbrowser" is-config="true" duration-ms="3586" started-at="2020-03-08T12:33:18Z" finished-at="2020-03-08T12:33:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[IE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Instance01]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[IT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method status="PASS" signature="setExtent()[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@73846619]" name="setExtent" is-config="true" duration-ms="0" started-at="2020-03-08T12:33:18Z" finished-at="2020-03-08T12:33:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method status="FAIL" signature="testValidLogin()[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@73846619]" name="testValidLogin" duration-ms="43741" started-at="2020-03-08T12:33:21Z" finished-at="2020-03-08T12:34:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME - Enter Time-Track] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME - Enter Time-Track] but found [actiTIME - Login]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at org.testng.Assert.assertEquals(Assert.java:453)at org.testng.Assert.assertEquals(Assert.java:463)at com.SBM.qa.Pages.HomePage.verifytitle(HomePage.java:20)at com.SBM.qa.TestCases.ValidLogin.testValidLogin(ValidLogin.java:25)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@73846619]" name="tearDown" is-config="true" duration-ms="734" started-at="2020-03-08T12:34:05Z" finished-at="2020-03-08T12:34:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=FAILURE method=ValidLogin.testValidLogin()[pri:0, instance:com.SBM.qa.TestCases.ValidLogin@73846619] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.SBM.qa.TestCases.ValidLogin -->
    </test> <!-- IETest -->
  </suite> <!-- Suite -->
</testng-results>
